import{_ as p,o as d,c,a as e,f as a,g as i,v as r,j as h,F as m,h as u,p as v,i as y}from"./index-05e8c48f.js";const _={data(){return{}},methods:{incorrect(t){var o=document.getElementById("snackbar");o.innerHTML=t,o.style.backgroundColor="red",o.className="show",setTimeout(function(){o.className=o.className.replace("show","")},3e3)},correct1(){var t=document.getElementById("snackbar");t.innerHTML="Correct",t.style.backgroundColor="green",t.className="show",setTimeout(function(){t.className=t.className.replace("show","")},3e3)},validate_one(){this.one.trim()=="try"&&this.two.trim()=="catch"?(this.correct1(),alert("Correct")):(this.incorrect("Try again"),alert("Incorrect, please try again"))}}},n=t=>(v("data-v-7d156657"),t=t(),y(),t),b=n(()=>e("header",{style:{padding:"20px"}},[e("h5",null,"HELP"),e("h1",null,"Try-Catch Blocks")],-1)),w=n(()=>e("div",{id:"snackbar"},"Some text some message..",-1)),x={class:"flex-row"},k=u('<div style="width:50%;" data-v-7d156657><h2 data-v-7d156657>Theory</h2><div class="outbox" data-v-7d156657><span id="comment" data-v-7d156657>//a try block</span><p data-v-7d156657>try {</p><p data-v-7d156657>int[] myNumbers = {1, 2, 3};</p><span id="comment" data-v-7d156657>//an index out of bound exception</span><p data-v-7d156657>System.out.println(myNumbers[10]);</p><p data-v-7d156657>}</p><span id="comment" data-v-7d156657>//a catch block with the exception</span><p data-v-7d156657>catch (Exception e) {</p><p data-v-7d156657>System.out.println(&quot;Something went wrong.&quot;);</p><p data-v-7d156657>}</p><span id="comment" data-v-7d156657>//a finally block</span><br data-v-7d156657></div><div class="content" data-v-7d156657><p data-v-7d156657>When you write code that may throw an exception, you can use a try block to enclose that code. If an exception is thrown within the try block, the program control is transferred to the catch block, which contains the code that handles the exception. </p></div></div>',1),f={style:{width:"50%"}},g=n(()=>e("h2",null,"Try it yourself",-1)),N={class:"outbox"},C=n(()=>e("span",{id:"comment"},"//try block",-1)),S=n(()=>e("span",{id:"comment"},"//catch block",-1)),T={id:"buttons",class:"relative"},I={key:0,class:"navitem"};function E(t,o,V,B,$,l){return d(),c(m,null,[b,w,e("main",null,[e("div",x,[k,e("div",f,[g,e("div",N,[e("pre",null,[a(""),C,a(`
`),i(e("input",{type:"text","onUpdate:modelValue":o[0]||(o[0]=s=>t.one=s)},null,512),[[r,t.one]]),a(` {
        int result = divide(10, 0);
        System.out.println("Result is: " + result);
}
`),S,a(` 
`),i(e("input",{type:"text","onUpdate:modelValue":o[1]||(o[1]=s=>t.two=s)},null,512),[[r,t.two]]),a(` (ArithmeticException e) {
        System.out.println("Error: ");
}
        `)])]),e("button",{class:"button-9",onClick:o[2]||(o[2]=s=>l.validate_one())},"Validate")])]),e("footer",null,[e("div",T,[t.currentStep===1?(d(),c("button",I,"Next")):h("",!0)])])])],64)}const L=p(_,[["render",E],["__scopeId","data-v-7d156657"]]);export{L as default};
