import{_ as p,o as d,c as l,a as t,f as n,g as c,v as i,j as u,F as m,h,p as _,i as v}from"./index-05e8c48f.js";const g={data(){return{}},methods:{incorrect(e){var s=document.getElementById("snackbar");s.innerHTML=e,s.style.backgroundColor="red",s.className="show",setTimeout(function(){s.className=s.className.replace("show","")},3e3)},correct1(){var e=document.getElementById("snackbar");e.innerHTML="Correct",e.style.backgroundColor="green",e.className="show",setTimeout(function(){e.className=e.className.replace("show","")},3e3)},validate_one(){this.one.trim()=="s1.equals(s2)"&&this.two.trim()=="s1.compareTo(s2)"?(this.correct1(),alert("Correct")):(this.incorrect("Try again"),alert("Incorrect, please try again"))}}},o=e=>(_("data-v-c4891d31"),e=e(),v(),e),b=o(()=>t("header",{style:{padding:"20px"}},[t("h5",null,"HELP"),t("h1",null,"String Compare Function")],-1)),w=o(()=>t("div",{id:"snackbar"},"Some text some message..",-1)),f={class:"flex-row"},y=h('<div style="width:50%;" data-v-c4891d31><h2 data-v-c4891d31>Theory</h2><div class="outbox" data-v-c4891d31><p data-v-c4891d31>String str1 = &quot;Function&quot;;</p><p data-v-c4891d31>String str1 = &quot;function&quot;;</p><p data-v-c4891d31>boolean match= str1.equals(str2);<span id="comment" data-v-c4891d31>//equals() method</span></p><span id="comment" data-v-c4891d31>//match will be initialized to false</span><p data-v-c4891d31>String str1 = &quot;apple&quot;;</p><p data-v-c4891d31>String str2 = &quot;banana&quot;;</p><p data-v-c4891d31>int result = str1.compareTo(str2); <span id="comment" data-v-c4891d31>//compareTo() method</span></p><span id="comment" data-v-c4891d31>//match will be initialized to a negative integer</span><br data-v-c4891d31></div><div class="content" data-v-c4891d31><p data-v-c4891d31> The equals() method compares the content of two strings and returns true if the contents are equal, and false otherwise. </p><p data-v-c4891d31>The compareTo() method compares two strings lexicographically. </p></div></div>',1),T={style:{width:"50%"}},S=o(()=>t("h2",null,"Try it yourself",-1)),q={class:"outbox"},x=o(()=>t("p",null,'String s1 = "Hello";',-1)),N=o(()=>t("p",null,'String s2 = "Pillow";',-1)),C=o(()=>t("br",null,null,-1)),k=o(()=>t("br",null,null,-1)),I=o(()=>t("span",{id:"comment"},"//compare the content of two strings",-1)),V=o(()=>t("br",null,null,-1)),B=o(()=>t("br",null,null,-1)),E=o(()=>t("br",null,null,-1)),F=o(()=>t("br",null,null,-1)),H=o(()=>t("br",null,null,-1)),$=o(()=>t("span",{id:"comment"},"//compare two strings lexicographically",-1)),L={id:"buttons",class:"relative"},M={key:0,class:"navitem"};function z(e,s,P,U,j,r){return d(),l(m,null,[b,w,t("main",null,[t("div",f,[y,t("div",T,[S,t("div",q,[x,N,n(" boolean result="),c(t("input",{type:"text","onUpdate:modelValue":s[0]||(s[0]=a=>e.one=a)},null,512),[[i,e.one]]),n("; "),C,k,I,V,B,E,n(" int ans="),c(t("input",{type:"text","onUpdate:modelValue":s[1]||(s[1]=a=>e.two=a)},null,512),[[i,e.two]]),n("; "),F,H,$]),t("button",{class:"button-9",onClick:s[2]||(s[2]=a=>r.validate_one())},"Validate")])]),t("footer",null,[t("div",L,[e.currentStep===1?(d(),l("button",M,"Next")):u("",!0)])])])],64)}const A=p(g,[["render",z],["__scopeId","data-v-c4891d31"]]);export{A as default};
